services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: apartments_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: apartments_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - apartments_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: apartments_backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://admin:password@mongodb:27017/apartments_db?authSource=admin
      DB_NAME: apartments_db
      CORS_ORIGIN: http://localhost:3000
      API_PREFIX: /api/v1
      JWT_SECRET: your_super_secret_jwt_key_for_development_change_in_production
      JWT_EXPIRES_IN: 7d
    ports:
      - "3001:3001"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_uploads:/app/uploads
    networks:
      - apartments_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database Seeder (runs once and exits)
  seeder:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: apartments_seeder
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/apartments_db?authSource=admin
      DB_NAME: apartments_db
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - apartments_network
    command: ["npm", "run", "seed"]
    restart: "no"

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: apartments_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001/api/v1
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
      seeder:
        condition: service_completed_successfully
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - apartments_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  mongodb_data:
  backend_uploads:

networks:
  apartments_network:
    driver: bridge
